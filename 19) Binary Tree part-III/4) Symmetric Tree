//https://leetcode.com/problems/symmetric-tree/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isSymmetric(TreeNode* root) {
        if(!root)
            return true;
        return isSymmetricHelper(root->left,root->right);
    }
    bool isSymmetricHelper(TreeNode* a, TreeNode* b){
        if(!a && !b)
            return true;
        
        if(a && b){
            return (a->val == b->val && isSymmetricHelper(a->left,b->right) && isSymmetricHelper(a->right,b->left));
        }
        return false;   //one is null only
    }
};
