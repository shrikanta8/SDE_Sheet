class Solution {
     int search(int[] nums, int target) {
         int p = findPivot(nums);
         if( p== -1)
             return BS(nums,target, 0, nums.length-1);
         if(nums[p] == target)
             return p;
         if(target >= nums[0])
             return BS(nums,target, 0, p-1);
         
         return BS(nums,target, p + 1, nums.length-1);     
    }
    int BS(int[] arr, int target, int s, int e){
        
     
        while(s <= e){
            int mid = s+ (e-s)/2;
            
            if(target < arr[mid])
                e = mid-1;
            else if(target > arr[mid])
                s = mid+1;
            else
                return mid;
        }
        return -1;
    }
    
    
    int findPivot(int[] arr){
            int s=0,e = arr.length-1;

        while(s<=e){
            int mid = s+ (e-s)/2;
            if(mid < e && arr[mid] > arr[mid + 1] )
                return mid;
            if(mid > s && arr[mid - 1] > arr[mid])
                return mid - 1;
            if(arr[s] > arr[mid])
                e = mid - 1;
            else
                s = mid+1;
        }
        return -1;
    
    }
    
}
