//https://leetcode.com/problems/implement-queue-using-stacks/

class MyQueue {
    stack<int> input,output;
public:
    
    MyQueue() {
        
    }
    
    void push(int x) {
        input.push(x);
    }
    
    int pop() {
        int ele;
        
        if(output.empty()){
            while(input.size()){        //transferring all elements of input stack to output stack
                output.push(input.top());
                input.pop();
            }
        }
         ele = output.top();
        output.pop();
        return ele;
    }
    
    int peek() {
        
        if(output.empty()){
            
           while(input.size()){      //transferring all elements of input stack to output stack
                output.push(input.top());
                input.pop();
            } 
        }
        return output.top();
    }
    
    bool empty() {
        return input.size()==0 && output.size()==0;
    }
};

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue* obj = new MyQueue();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->peek();
 * bool param_4 = obj->empty();
 */
