//https://practice.geeksforgeeks.org/problems/sort-a-stack/1/?category[]=Stack&difficulty[]=0&page=1&query=category[]Stackdifficulty[]0page1

/*The structure of the class is
class SortedStack{
public:
	stack<int> s;
	void sort();
};
*/
void insertAtCorrectPosition(int x, stack<int>& s){
    if(s.size() ==0 || s.top() < x)
        s.push(x);
    else{
        int ele = s.top();
        s.pop();
        insertAtCorrectPosition(x,s);   //we are keeping x at correct position by popping smaller elements from top 
        s.push(ele);    //piushing back the popped elements
    }
    
}
void reverse(stack<int>& s){
    if(s.size()){
        int x = s.top();
        s.pop();
        reverse(s);
        insertAtCorrectPosition(x,s);   //we are starting with element which is at the bottommost of the stack 
    }
}
/* The below method sorts the stack s 
you are required to complete the below method */
void SortedStack :: sort()
{
    reverse(s);
   //Your code here
}
