//https://leetcode.com/problems/longest-substring-without-repeating-characters/


//other approach:
// 0(2N) => using left and right pointer and set to stre the characters
class Solution {
public:
    int lengthOfLongestSubstring(string A) {
        unordered_map<char,int> mp;
        
        int n=A.length();
        int ans=0,start=0,end=0;
        
        while(end < n){
            
            if(mp.find(A[end]) != mp.end() ){
                start = max( mp[A[end]]+1 , start);
            }
            
            ans = max(ans,end-start+1); 
            mp[A[end]]=end;     //keep updating the indices of the character
            
            end++;
        }
        
        return ans; 
    }
};
