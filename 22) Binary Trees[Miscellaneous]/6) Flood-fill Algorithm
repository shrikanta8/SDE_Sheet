class Solution {
public:
    void paint(vector<vector<int>>& image, int x, int y,int r, int c, int newColor, int oldColor){
        // if( image[x][y] != newColor) return;
        
        if(x+1 <r &&  image[x+1][y]==oldColor){
            image[x+1][y] = newColor;
            paint(image,x+1,y,r,c,newColor,oldColor);
        }
        if(x-1 >=0 &&  image[x-1][y]==oldColor){
            image[x-1][y] = newColor;
            paint(image,x-1,y,r,c,newColor,oldColor);
        }
        if(y+1 <c &&  image[x][y+1]==oldColor){
            image[x][y+1] = newColor;
            paint(image,x,y+1,r,c,newColor,oldColor);
        }
        if(y - 1 >= 0 &&  image[x][y-1]==oldColor){
            image[x][y-1] = newColor;
            paint(image,x,y-1,r,c,newColor,oldColor);
        }
        
    }
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int newColor) {
        if( image[sr][sc]== newColor) return image;
        int c=image[0].size() ,r=image.size();
        int oldColor = image[sr][sc];
        image[sr][sc]= newColor;
        paint(image,sr,sc,r,c,newColor,oldColor);
        return image;
    }
};
