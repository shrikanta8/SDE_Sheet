//https://www.interviewbit.com/problems/rain-water-trapped/


//brute force=>
for every index finding greater element on lhs and rhs

//next approach=>
using prefix and suffix arrays having left side and right side greater element
O(2n) space and O(2n) time


//next approach=> (hard to explain, don't tell in interviews)
using stack


//optimized
O(1) space O(n) time

int Solution::trap(const vector<int> &A) {
    int n=A.size();
    int r = n-1,l=0,maxLeft=0,maxRight=0,ans=0;
    
    while(l<r){
        if(A[l] <= A[r]){
            
            if(maxLeft <= A[l] ) //since A[l] is greater =>there is no greater value on lhs than A[l] =>can't store water
                maxLeft = A[l];
            else 
                ans += (maxLeft-A[l]);      //since current A[l] is less than maxLeft && A[l] is also less than A[r] => water can be stored here
                
            l++;
        }
        else{
            
            if(maxRight<= A[r] ) 
                maxRight = A[r];
            else
                ans += (maxRight - A[r]);
                
            r--;

        }
    }
    return ans;
}
